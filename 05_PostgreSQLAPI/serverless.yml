service: postgresql-api
frameworkVersion: "2 || 3"

package:
  individually: true
custom:
  esbuild: # esbuildの設定
    bundle: true # コードのバンドルの設定
    minify: true # コードの最小化の設定
    sourcemap: true # SourceMapを有効化
    exclude: ["@aws-sdk"] # 除くNPMパッケージ
    target: "node18" # Nodeのバージョン
    platform: "node"
    concurrency: 10
    watch:
      pattern: ["src/**/*.ts"] # srcディレクトリ以下のTSのみを対象とする
      ignore: [] # ビルド対象から無視するファイル

provider:
  name: aws # デプロイ先のクラウドプロバイダ
  runtime: nodejs18.x # Nodeのバージョン
  region: ap-northeast-1 # Region
  timeout: 30 # API Gatewayのタイムアウト時間
  stage: v1
  iamRoleStatements: # Lambdaに割り当てるIAMロール
    - Effect: "Allow"
      Action:
        - rds:* # RDSのすべての操作
        - secretsmanager:* # SecresManagerのすべての操作
      Resource: "*"

functions:
  app: # 関数名
    handler: src/handler.handler # 関数のエンドポイントの指定
    description: "RDS操作関数"
    events:
      - http:
          method: ANY # 有効化するHTTPメソッド（ANYはすべて許可）
          path: "/" # 有効化するAPIのパス
          cors: true # CORSの有効化：prefligntリクエストへのレスポンスを返すようになる

plugins: # 利用するプラグイン
  - serverless-esbuild # デプロイ時にesbuildでビルドするプラグイン
  - serverless-offline # 関数をオフライン実行する関数
